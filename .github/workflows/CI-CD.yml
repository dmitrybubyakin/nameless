name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: us-central1
  SERVICE_NAME: namelss

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: namelss
          POSTGRES_PASSWORD: ''
          POSTGRES_DB: namelss_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: lein with-profile test test

      - name: Run coverage analysis
        run: lein with-profile test cloverage --codecov

      - name: Uplaod codecov report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./target/coverage/codecov.json
          fail_ci_if_error: true

      - name: DockerHub build
        run: docker build . --file Dockerfile --tag namelss:$(date +%s)

      - name: DockerHub Publish
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ikshitijsingh/namelss
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#    - name: Setup Gcloud
#      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#      with:
#        version: '290.0.1'
#        service_account_key: ${{ secrets.RUN_SA_KEY }}
#        project_id: ${{ secrets.RUN_PROJECT }}
#
#    - name: Build and publish Gcloud image
#      run: |-
#        gcloud builds submit \
#          --quiet \
#          --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"
#
#    - name: Deploy to Gcloud App engine
#      run: |-
#        gcloud run deploy "$SERVICE_NAME" \
#          --quiet \
#          --region "$RUN_REGION" \
#          --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
#          --platform "managed" \
#          --allow-unauthenticated
